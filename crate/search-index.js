var searchIndex = JSON.parse('{\
"aurae_proto":{"doc":"Generated Protobuf definitions for the Aurae Standard â€¦","t":[0,0,0,13,13,17,3,3,4,3,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,8,3,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,17,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,0,0,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17],"n":["observe","runtime","schedule","ChannelStderr","ChannelStdout","FILE_DESCRIPTOR_SET","GetAuraeDaemonLogStreamRequest","GetSubProcessStreamRequest","LogChannelType","LogItem","as_str_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","channel_type","channel_type","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","deserialize","deserialize","deserialize","deserialize","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_i32","from_ref","from_ref","from_ref","from_ref","hash","into","into","into","into","into_request","into_request","into_request","into_request","is_valid","line","observe_client","observe_server","partial_cmp","process_id","serialize","serialize","serialize","serialize","set_channel_type","timestamp","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ObserveClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","get_aurae_daemon_log_stream","get_sub_process_stream","into","into_request","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GetAuraeDaemonLogStreamStream","GetSubProcessStreamStream","Observe","ObserveServer","accept_compressed","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","get_aurae_daemon_log_stream","get_sub_process_stream","into","into_make_service","into_request","new","poll_ready","poll_ready","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","AllocateCellRequest","AllocateCellResponse","Cell","Executable","FILE_DESCRIPTOR_SET","FreeCellRequest","FreeCellResponse","StartExecutableRequest","StartExecutableResponse","StopExecutableRequest","StopExecutableResponse","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","cell_name","cell_name","cell_name","cell_name","cell_service_client","cell_service_server","cgroup_v2","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","cpu_cpus","cpu_mems","cpu_quota","cpu_shares","default","default","default","default","default","default","default","default","default","default","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","executable","executable_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","instances_client","instances_server","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","name","name","ns_share_cgroup","ns_share_ipc","ns_share_mount","ns_share_net","ns_share_pid","ns_share_uts","pid","pods_client","pods_server","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","spawn_client","spawn_server","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CellServiceClient","accept_compressed","allocate","borrow","borrow_mut","clone","clone_into","connect","fmt","free","from","from_ref","into","into_request","new","send_compressed","start","stop","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","CellService","CellServiceServer","accept_compressed","allocate","borrow","borrow_mut","call","call","clone","clone_into","fmt","free","from","from_arc","from_ref","into","into_make_service","into_request","new","poll_ready","poll_ready","send_compressed","start","stop","to_owned","try_from","try_into","type_id","vzip","with_interceptor","InstancesClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","into","into_request","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Instances","InstancesServer","accept_compressed","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","into","into_make_service","into_request","new","poll_ready","poll_ready","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","PodsClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","into","into_request","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Pods","PodsServer","accept_compressed","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","into","into_make_service","into_request","new","poll_ready","poll_ready","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","SpawnClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","into","into_request","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Spawn","SpawnServer","accept_compressed","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","into","into_make_service","into_request","new","poll_ready","poll_ready","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","FILE_DESCRIPTOR_SET"],"q":["aurae_proto","","","aurae_proto::observe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aurae_proto::observe::observe_client","","","","","","","","","","","","","","","","","","","","","","","aurae_proto::observe::observe_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aurae_proto::runtimeaurae_proto::runtime::cell_service_client","","","","","","","","","","","","","","","","","","","","","","","","","aurae_proto::runtime::cell_service_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aurae_proto::runtime::instances_client","","","","","","","","","","","","","","","","","","","","","aurae_proto::runtime::instances_server","","","","","","","","","","","","","","","","","","","","","","","","","","aurae_proto::runtime::pods_client","","","","","","","","","","","","","","","","","","","","","aurae_proto::runtime::pods_server","","","","","","","","","","","","","","","","","","","","","","","","","","aurae_proto::runtime::spawn_client","","","","","","","","","","","","","","","","","","","","","aurae_proto::runtime::spawn_server","","","","","","","","","","","","","","","","","","","","","","","","","","aurae_proto::schedule"],"d":["","","","","","Encoded file descriptor set for the <code>observe</code> package","","TODO: not implemented","","","String value of the enum field names used in the ProtoBuf â€¦","","","","","","","","","","Returns the enum value of <code>channel_type</code>, or the default if â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>LogChannelType</code>, or <code>None</code> if <code>value</code> is â€¦","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>LogChannelType</code>.","","Generated client implementations.","Generated server implementations.","","","","","","","Sets <code>channel_type</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given â€¦","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Compress requests with the given encoding.","","","","","","","","Server streaming response type for the â€¦","Server streaming response type for the GetSubProcessStream â€¦","Generated trait containing gRPC methods that should be â€¦","","Enable decompressing requests with the given encoding.","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","/ An Aurae cell is a name given to Linux control groups â€¦","/ The response after a cell has been allocated.","/ An isolation resource used to divide a system into â€¦","/ The most primitive workload in Aurae, a standard â€¦","Encoded file descriptor set for the <code>runtime</code> package","/ Used to remove or free a cell after it has been â€¦","/ Response after removing or freeing a cell.","/ A request for starting an executable inside of a Cell. / â€¦","/ The response after starting an executable within a Cell.","","","","","","","","","","","","","","","","","","","","","","","/ A smaller resource constrained section of the system.","","","","","Generated client implementations.","Generated server implementations.","/ A bool that will be set to true if the cgroup was â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","/ A comma-separated list of CPU IDs where the task in the â€¦","/ Same syntax as the cpus field of this structure, but â€¦","/ In one period, how much can the tasks run in â€¦","/  Cgroups can be guaranteed a minimum number of â€œCPU â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Generated client implementations.","Generated server implementations.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","/ Resource parameters for control groups (cgroups) / Build â€¦","","","/ Linux namespaces to share with the calling process. / If â€¦","","","","/ Return a pid as an int32 based on the pid_t type / in â€¦","Generated client implementations.","Generated server implementations.","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given â€¦","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with the given encoding.","","","","","","","","","","Generated trait containing gRPC methods that should be â€¦","","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given â€¦","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be â€¦","","Enable decompressing requests with the given encoding.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given â€¦","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be â€¦","","Enable decompressing requests with the given encoding.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given â€¦","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be â€¦","","Enable decompressing requests with the given encoding.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","Encoded file descriptor set for the <code>schedule</code> package"],"i":[0,0,0,1,1,0,0,0,0,0,1,4,3,5,1,4,3,5,1,5,3,3,4,3,5,4,3,5,1,4,3,5,1,1,4,3,5,1,4,3,5,1,4,3,5,4,3,5,1,1,4,3,5,1,4,3,5,1,1,4,3,5,1,1,4,3,5,1,4,3,5,1,1,5,0,0,1,3,4,3,5,1,3,5,4,3,5,1,4,3,5,1,4,3,5,1,4,3,5,1,4,3,5,1,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,28,28,0,0,29,29,29,29,29,29,29,29,29,29,29,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,40,41,42,44,46,0,0,41,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,39,39,39,38,39,40,41,42,43,44,45,46,47,38,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,44,46,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,0,0,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,39,39,39,39,39,39,45,0,0,38,39,40,41,42,43,44,45,46,47,0,0,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,50,49,50,50,50,50,50,50,50,49,50,50,50,50,50,50,50,50,50,50,49,49,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,1],0,[4],[3],[5],[4,4],[3,3],[5,5],[1,1],[[]],[[]],[[]],[[]],[[1,1],6],[[],4],[[],3],[[],5],[[],1],[[],[[7,[4]]]],[[],[[7,[3]]]],[[],[[7,[5]]]],[[],[[7,[1]]]],[4,8],[3,8],[5,8],[[4,4],9],[[3,3],9],[[5,5],9],[[1,1],9],[[],9],[[4,10],11],[[3,10],11],[[5,10],11],[[1,10],11],[[]],[[]],[[]],[[]],[12,[[13,[1]]]],[[]],[[]],[[]],[[]],[1],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[12,9],0,0,0,[[1,1],[[13,[6]]]],0,[4,7],[3,7],[5,7],[1,7],[[3,1]],0,[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],0,[[16,17],16],[[]],[[]],[[[16,[18]]],[[16,[18]]]],[[]],[[],[[7,[[16,[19]],20]]]],[[[16,[21]],10],11],[[]],[[]],[[16,[22,[4]]],[[7,[[24,[[23,[5]]]],25]]]],[[16,[22,[3]]],[[7,[[24,[[23,[5]]]],25]]]],[[]],[[],14],[[],16],[[16,17],16],[[]],[[],7],[[],7],[[],15],[[]],[[],[[16,[26]]]],[27,16],0,0,0,0,[[[29,[28]],17],[[29,[28]]]],[[]],[[]],[[29,30]],[30],[[[29,[28]]],[[29,[28]]]],[[]],[[[29,[[0,[21,28]]]],10],11],[[]],[[[31,[28]]],[[29,[28]]]],[[]],[[[14,[4]]],[[34,[[33,[32]]]]]],[[[14,[3]]],[[34,[[33,[32]]]]]],[[]],[[],35],[[],14],[28,[[29,[28]]]],[[29,36],[[37,[7]]]],[36,[[37,[7]]]],[[[29,[28]],17],[[29,[28]]]],[[]],[[],7],[[],7],[[],15],[[]],[28,[[26,[[29,[28]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[[],47],0,[[],[[7,[38]]]],[[],[[7,[39]]]],[[],[[7,[40]]]],[[],[[7,[41]]]],[[],[[7,[42]]]],[[],[[7,[43]]]],[[],[[7,[44]]]],[[],[[7,[45]]]],[[],[[7,[46]]]],[[],[[7,[47]]]],[38,8],[39,8],[40,8],[41,8],[42,8],[43,8],[44,8],[45,8],[46,8],[47,8],[[38,38],9],[[39,39],9],[[40,40],9],[[41,41],9],[[42,42],9],[[43,43],9],[[44,44],9],[[45,45],9],[[46,46],9],[[47,47],9],0,0,[[38,10],11],[[39,10],11],[[40,10],11],[[41,10],11],[[42,10],11],[[43,10],11],[[44,10],11],[[45,10],11],[[46,10],11],[[47,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,0,[38,7],[39,7],[40,7],[41,7],[42,7],[43,7],[44,7],[45,7],[46,7],[47,7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[48,17],48],[[48,[22,[40]]],[[7,[[24,[41]],25]]]],[[]],[[]],[[[48,[18]]],[[48,[18]]]],[[]],[[],[[7,[[48,[19]],20]]]],[[[48,[21]],10],11],[[48,[22,[42]]],[[7,[[24,[43]],25]]]],[[]],[[]],[[]],[[],14],[[],48],[[48,17],48],[[48,[22,[44]]],[[7,[[24,[45]],25]]]],[[48,[22,[46]]],[[7,[[24,[47]],25]]]],[[]],[[],7],[[],7],[[],15],[[]],[[],[[48,[26]]]],[27,48],0,0,[[[50,[49]],17],[[50,[49]]]],[[[14,[40]]],[[34,[[33,[32]]]]]],[[]],[[]],[[50,30]],[30],[[[50,[49]]],[[50,[49]]]],[[]],[[[50,[[0,[21,49]]]],10],11],[[[14,[42]]],[[34,[[33,[32]]]]]],[[]],[[[31,[49]]],[[50,[49]]]],[[]],[[]],[[],35],[[],14],[49,[[50,[49]]]],[36,[[37,[7]]]],[[50,36],[[37,[7]]]],[[[50,[49]],17],[[50,[49]]]],[[[14,[44]]],[[34,[[33,[32]]]]]],[[[14,[46]]],[[34,[[33,[32]]]]]],[[]],[[],7],[[],7],[[],15],[[]],[49,[[26,[[50,[49]]]]]],0,[[51,17],51],[[]],[[]],[[[51,[18]]],[[51,[18]]]],[[]],[[],[[7,[[51,[19]],20]]]],[[[51,[21]],10],11],[[]],[[]],[[]],[[],14],[[],51],[[51,17],51],[[]],[[],7],[[],7],[[],15],[[]],[[],[[51,[26]]]],[27,51],0,0,[[[53,[52]],17],[[53,[52]]]],[[]],[[]],[30],[[53,30]],[[[53,[52]]],[[53,[52]]]],[[]],[[[53,[[0,[21,52]]]],10],11],[[]],[[[31,[52]]],[[53,[52]]]],[[]],[[]],[[],35],[[],14],[52,[[53,[52]]]],[[53,36],[[37,[7]]]],[36,[[37,[7]]]],[[[53,[52]],17],[[53,[52]]]],[[]],[[],7],[[],7],[[],15],[[]],[52,[[26,[[53,[52]]]]]],0,[[54,17],54],[[]],[[]],[[[54,[18]]],[[54,[18]]]],[[]],[[],[[7,[[54,[19]],20]]]],[[[54,[21]],10],11],[[]],[[]],[[]],[[],14],[[],54],[[54,17],54],[[]],[[],7],[[],7],[[],15],[[]],[[],[[54,[26]]]],[27,54],0,0,[[[56,[55]],17],[[56,[55]]]],[[]],[[]],[[56,30]],[30],[[[56,[55]]],[[56,[55]]]],[[]],[[[56,[[0,[21,55]]]],10],11],[[]],[[[31,[55]]],[[56,[55]]]],[[]],[[]],[[],35],[[],14],[55,[[56,[55]]]],[[56,36],[[37,[7]]]],[36,[[37,[7]]]],[[[56,[55]],17],[[56,[55]]]],[[]],[[],7],[[],7],[[],15],[[]],[55,[[26,[[56,[55]]]]]],0,[[57,17],57],[[]],[[]],[[[57,[18]]],[[57,[18]]]],[[]],[[],[[7,[[57,[19]],20]]]],[[[57,[21]],10],11],[[]],[[]],[[]],[[],14],[[],57],[[57,17],57],[[]],[[],7],[[],7],[[],15],[[]],[[],[[57,[26]]]],[27,57],0,0,[[[59,[58]],17],[[59,[58]]]],[[]],[[]],[30],[[59,30]],[[[59,[58]]],[[59,[58]]]],[[]],[[[59,[[0,[21,58]]]],10],11],[[]],[[[31,[58]]],[[59,[58]]]],[[]],[[]],[[],35],[[],14],[58,[[59,[58]]]],[[59,36],[[37,[7]]]],[36,[[37,[7]]]],[[[59,[58]],17],[[59,[58]]]],[[]],[[],7],[[],7],[[],15],[[]],[58,[[26,[[59,[58]]]]]],0],"p":[[4,"LogChannelType"],[15,"str"],[3,"GetSubProcessStreamRequest"],[3,"GetAuraeDaemonLogStreamRequest"],[3,"LogItem"],[4,"Ordering"],[4,"Result"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"i32"],[4,"Option"],[3,"Request"],[3,"TypeId"],[3,"ObserveClient"],[4,"CompressionEncoding"],[8,"Clone"],[3,"Channel"],[3,"Error"],[8,"Debug"],[8,"IntoRequest"],[3,"Streaming"],[3,"Response"],[3,"Status"],[3,"InterceptedService"],[3,"Uri"],[8,"Observe"],[3,"ObserveServer"],[3,"Request"],[3,"Arc"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"IntoMakeService"],[3,"Context"],[4,"Poll"],[3,"Executable"],[3,"Cell"],[3,"AllocateCellRequest"],[3,"AllocateCellResponse"],[3,"FreeCellRequest"],[3,"FreeCellResponse"],[3,"StartExecutableRequest"],[3,"StartExecutableResponse"],[3,"StopExecutableRequest"],[3,"StopExecutableResponse"],[3,"CellServiceClient"],[8,"CellService"],[3,"CellServiceServer"],[3,"InstancesClient"],[8,"Instances"],[3,"InstancesServer"],[3,"PodsClient"],[8,"Pods"],[3,"PodsServer"],[3,"SpawnClient"],[8,"Spawn"],[3,"SpawnServer"]]},\
"auraed":{"doc":"Systems daemon built for higher order simple, safe, secure â€¦","t":[17,3,11,11,12,11,11,0,11,11,0,11,12,12,12,11,11,11,11,5,5,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11],"n":["AURAE_SOCK","AuraedRuntime","borrow","borrow_mut","ca_crt","fmt","from","init","into","into_request","logging","run","server_crt","server_key","socket","try_from","try_into","type_id","vzip","init","get_timestamp_sec","log_channel","stream_logger","LogChannel","borrow","borrow_mut","fmt","from","get_consumer","get_producer","into","into_request","log_line","new","try_from","try_into","type_id","vzip","StreamLogger","borrow","borrow_mut","enabled","flush","fmt","from","into","into_request","log","new","producer","try_from","try_into","type_id","vzip"],"q":["auraed","","","","","","","","","","","","","","","","","","","auraed::init","auraed::logging","","","auraed::logging::log_channel","","","","","","","","","","","","","","","auraed::logging::stream_logger","","","","","","","","","","","","","","",""],"d":["Default Unix domain socket path for <code>auraed</code>.","Each instance of Aurae holds internal state in memory. â€¦","","","Certificate Authority for an organization or mesh of Aurae â€¦","","Returns the argument unchanged.","Run the Aurae daemon as a pid 1 init program.","Calls <code>U::from(self)</code>.","","Internal logging system for Auraed and all spawned â€¦","Starts the runtime loop for the daemon.","The signed server X509 certificate for this unique â€¦","The secret key for this unique instance.","Configurable socket path. Defaults to the value of â€¦","","","","","Run Aurae as an init pid 1 instance.","Get UNIX timestamp in seconds for logging","Abstraction Layer for one log generating entity LogChannel â€¦","Implements Log trait. Used to add grpc API to log targets â€¦","Abstraction Layer for one log generating entity LogChannel â€¦","","","","Returns the argument unchanged.","Getter for consumer channel","Getter for producer channel","Calls <code>U::from(self)</code>.","","Wrapper that sends a log line to the channel","Constructor creating the channel for log communication","","","","","Sends log messages generated in rust code to the logging â€¦","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Constructor requires channel between api and logger","Channel used to send log messages to grpc API","","","",""],"i":[0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16],"f":[0,0,[[]],[[]],0,[[1,2],3],[[]],0,[[]],[[],4],0,[1,[[7,[[6,[5]]]]]],0,0,0,[[],7],[[],7],[[],8],[[]],[9],[[],10],0,0,0,[[]],[[]],[[11,2],3],[[]],[11,[[13,[12]]]],[11,[[14,[12]]]],[[]],[[],4],[[[14,[12]],15]],[15,11],[[],7],[[],7],[[],8],[[]],0,[[]],[[]],[[16,17],18],[16],[[16,2],3],[[]],[[]],[[],4],[[16,19]],[[[14,[12]]],16],0,[[],7],[[],7],[[],8],[[]]],"p":[[3,"AuraedRuntime"],[3,"Formatter"],[6,"Result"],[3,"Request"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"TypeId"],[3,"Level"],[15,"i64"],[3,"LogChannel"],[3,"LogItem"],[3,"Receiver"],[3,"Sender"],[15,"str"],[3,"StreamLogger"],[3,"Metadata"],[15,"bool"],[3,"Record"]]},\
"auraescript":{"doc":"","t":[5],"n":["init"],"q":["auraescript"],"d":[""],"i":[0],"f":[[[],1]],"p":[[3,"JsRuntime"]]},\
"auraescript_macros":{"doc":"","t":[14],"n":["ops_generator"],"q":["auraescript_macros"],"d":["Example:"],"i":[0],"f":[0],"p":[]},\
"validation":{"doc":"","t":[13,3,13,13,13,13,17,17,17,17,17,3,8,8,8,4,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,5,5,11,11,11,11,11,11,11,11,11,11,5,10,10,10,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12],"n":["AllowRegexViolation","DOMAIN_NAME_LABEL_REGEX","Invalid","Maximum","Minimum","Required","UNIT_BYTES","UNIT_CHARACTER","UNIT_CHARACTERS","UNIT_ITEM","UNIT_ITEMS","UNRESERVED_URL_PATH_SEGMENT_REGEX","ValidatedField","ValidatedType","ValidatingType","ValidationError","allow_regex","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","field_name","fmt","fmt","from","from","from","get_field","into","into","into","into_request","into_request","into_request","maximum_length","maximum_value","minimum_length","minimum_value","provide","required","required_not_empty","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","valid_enum","validate","validate","validate","validate_for_creation","validate_optional","vzip","vzip","vzip","field","field","field","field","field","maximum","minimum","pattern","units","units"],"q":["validation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","validation::ValidationError","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Default implementation calls <code>Self::validate</code>.","Default implementation returns immediately when input is â€¦","","","","","","","","","","","","",""],"i":[4,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,6,7,4,6,7,4,6,7,0,4,4,6,7,4,4,6,7,4,6,7,4,0,0,0,0,4,0,0,4,6,7,4,6,7,4,6,7,4,0,22,23,24,24,24,6,7,4,25,26,27,28,29,27,26,28,26,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,1,[3,[1]]],[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[6,2],[7,2],[[1,[3,[1]]],8],[[4,9],10],[[4,9],10],[[]],[[]],[[]],[4,1],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[12,13,1,1,[3,[1]]],[[5,[4]]]],[[[0,[14,15,16,17]],[0,[14,15,16,17]],1,1,[3,[1]]],[[5,[4]]]],[[12,13,1,1,[3,[1]]],[[5,[4]]]],[[[0,[14,15,16,17]],[0,[14,15,16,17]],1,1,[3,[1]]],[[5,[4]]]],[18],[[3,1,[3,[1]]],[[5,[4]]]],[[[3,[12]],1,[3,[1]]],[[5,[12,4]]]],[[],8],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],19],[[],19],[[],19],[[20,1,[3,[1]]],[[5,[[21,[20]],4]]]],[[[3,[1]]],[[5,[4]]]],[[[3,[1]]],[[5,[4]]]],[[3,1,[3,[1]]],[[5,[4]]]],[[3,1,[3,[1]]],[[5,[4]]]],[[3,1,[3,[1]]],[[5,[3,4]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0],"p":[[15,"str"],[3,"Regex"],[4,"Option"],[4,"ValidationError"],[4,"Result"],[3,"DOMAIN_NAME_LABEL_REGEX"],[3,"UNRESERVED_URL_PATH_SEGMENT_REGEX"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"Request"],[8,"HasLen"],[15,"u64"],[8,"PartialOrd"],[8,"PartialEq"],[8,"Display"],[8,"Copy"],[3,"Demand"],[3,"TypeId"],[15,"i32"],[8,"TryFrom"],[8,"ValidatingType"],[8,"ValidatedType"],[8,"ValidatedField"],[13,"Required"],[13,"Minimum"],[13,"Maximum"],[13,"AllowRegexViolation"],[13,"Invalid"]]},\
"validation_macros":{"doc":"","t":[24,24],"n":["ValidatedType","ValidatingType"],"q":["validation_macros",""],"d":["Same as <code>ValidatingType</code>, but the <code>validation</code> function is on â€¦","Scaffolds validation and provides a <code>validate</code> function on â€¦"],"i":[0,0],"f":[0,0],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
